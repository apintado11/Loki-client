{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./transactions.service\";\nimport * as i2 from \"@angular/common\";\nfunction TransactionsComponent_div_1_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Transaction Categorized Successfully! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TransactionsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"h3\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"p\", 5);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function TransactionsComponent_div_1_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const transaction_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.updateTransactionCategory(transaction_r1._id));\n    });\n    i0.ɵɵtext(7, \"Utility\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵtemplate(9, TransactionsComponent_div_1_div_9_Template, 2, 0, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaction_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaction_r1.Description);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(transaction_r1.Amount);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.msgTrue);\n  }\n}\nexport class TransactionsComponent {\n  constructor(transactionService) {\n    this.transactionService = transactionService;\n    this.msgTrue = false;\n  }\n  ngOnInit() {\n    this.transactions$ = this.transactionService.getAllTransactions();\n  }\n  updateTransactionCategory(id) {\n    const newFormData = {\n      taxCategory: 'Utility'\n    };\n    this.transactionService.updateTransactionCategory(id, newFormData).subscribe(data => {\n      console.log(data);\n      this.msgTrue = true;\n    });\n  }\n}\nTransactionsComponent.ɵfac = function TransactionsComponent_Factory(t) {\n  return new (t || TransactionsComponent)(i0.ɵɵdirectiveInject(i1.TransactionsService));\n};\nTransactionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TransactionsComponent,\n  selectors: [[\"app-transactions\"]],\n  decls: 3,\n  vars: 3,\n  consts: [[1, \"row\"], [\"class\", \"transaction\", 4, \"ngFor\", \"ngForOf\"], [1, \"transaction\"], [1, \"card-title\"], [1, \"card-body\"], [1, \"card-text\"], [1, \"button\", \"button1\", 3, \"click\"], [4, \"ngIf\"]],\n  template: function TransactionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, TransactionsComponent_div_1_Template, 10, 3, \"div\", 1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 1, ctx.transactions$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \".button[_ngcontent-%COMP%] {\\n    border: none;\\n    color: white;\\n    padding: 15px 32px;\\n    text-align: center;\\n    text-decoration: none;\\n    display: inline-block;\\n    font-size: 16px;\\n    margin: 4px 2px;\\n    cursor: pointer;\\n  }\\n\\n  .button1[_ngcontent-%COMP%] {width: 250px;\\n    background-color: #FF00FF;}\\n  .button2[_ngcontent-%COMP%] {width: 50%;}\\n  .button3[_ngcontent-%COMP%] {width: 100%;}\\n\\n  .transaction[_ngcontent-%COMP%] {\\n    border: black;\\n    margin: 4px 2px;\\n    padding: 15px 32px;}\"]\n});","map":{"version":3,"mappings":";;;;;IAiCMA,2BAAqB;IACnBA,uDACJ;IAAAA,iBAAM;;;;;;IARRA,8BAA2E;IAClDA,YAA2B;IAAAA,iBAAK;IACvDA,8BAAuB;IACAA,YAAsB;IAAAA,iBAAI;IAE/CA,iCAAoF;IAArDA;MAAA;MAAA;MAAA;MAAA,OAASA,mEAA0C;IAAA,EAAC;IAACA,uBAAO;IAAAA,iBAAS;IAAAA,qBAAI;IACxGA,4EAEI;IACRA,iBAAM;;;;;IARmBA,eAA2B;IAA3BA,gDAA2B;IAE3BA,eAAsB;IAAtBA,2CAAsB;IAGrCA,eAAa;IAAbA,qCAAa;;;ACxBzB,OAAM,MAAOC,qBAAqB;EAIlCC,YAAoBC,kBAAuC;IAAvC,uBAAkB,GAAlBA,kBAAkB;IAEpC,YAAO,GAAG,KAAK;EADjB;EAEAC,QAAQ;IACN,IAAI,CAACC,aAAa,GAAG,IAAI,CAACF,kBAAkB,CAACG,kBAAkB,EAAE;EAEnE;EAEEC,yBAAyB,CAACC,EAAO;IACjC,MAAMC,WAAW,GAAG;MAACC,WAAW,EAAE;IAAS,CAAC;IAC1C,IAAI,CAACP,kBAAkB,CAACI,yBAAyB,CAACC,EAAE,EAACC,WAAW,CAAC,CAACE,SAAS,CAACC,IAAI,IAAG;MACjFC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACG,OAAO,GAAG,IAAI;IACrB,CAAC,CAAC;EACJ;;AAlBWd,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDiBlCpB,8BAAiB;MACfA,uEAUI;;MAXNA,iBAAiB;;;MACkCA,eAAwB;MAAxBA,iEAAwB","names":["i0","TransactionsComponent","constructor","transactionService","ngOnInit","transactions$","getAllTransactions","updateTransactionCategory","id","newFormData","taxCategory","subscribe","data","console","log","msgTrue","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\pinta\\IdeaProjects\\Loki\\loki-frontend\\src\\app\\transactions\\transactions.component.html","C:\\Users\\pinta\\IdeaProjects\\Loki\\loki-frontend\\src\\app\\transactions\\transactions.component.ts"],"sourcesContent":["<style>\n  .button {\n    border: none;\n    color: white;\n    padding: 15px 32px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    cursor: pointer;\n  }\n\n  .button1 {width: 250px;\n    background-color: #FF00FF;}\n  .button2 {width: 50%;}\n  .button3 {width: 100%;}\n\n  .transaction {\n    border: black;\n    margin: 4px 2px;\n    padding: 15px 32px;}\n\n\n</style>\n\n<div class=\"row\">\n  <div class=\"transaction\" *ngFor=\"let transaction of transactions$ | async\">\n    <h3 class=\"card-title\">{{transaction.Description}}</h3>\n    <div class=\"card-body\">\n      <p class=\"card-text\">{{transaction.Amount}}</p>\n\n      <button class=\"button button1\" (click)=\"updateTransactionCategory(transaction._id)\">Utility</button><br>\n      <div *ngIf=\"msgTrue\">\n        Transaction Categorized Successfully!\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {TransactionsService} from \"./transactions.service\";\n\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.component.html',\n  styleUrls: ['./transactions.component.scss']\n})\nexport class TransactionsComponent implements OnInit{\n\n      transactions$ : Observable<any> |undefined;\n\nconstructor(private transactionService: TransactionsService) {\n}\n  msgTrue = false\nngOnInit(): void {\n  this.transactions$ = this.transactionService.getAllTransactions()\n\n}\n\n  updateTransactionCategory(id: any){\n  const newFormData = {taxCategory: 'Utility'}\n    this.transactionService.updateTransactionCategory(id,newFormData).subscribe(data => {\n      console.log(data)\n      this.msgTrue = true\n    })\n  }\n\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}